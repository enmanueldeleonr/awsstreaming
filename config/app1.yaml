app_name: app1
modules_to_deploy: ["kms", "database", "cache", "messaging", "compute", "security_groups"] 

aws_region: eu-west-1

reuse_infrastructure:
  networking: true # Indicate reuse of existing networking
  eks: true        # Indicate reuse of existing EKS

existing_infrastructure: 
  networking:
    vpc_id: "vpc-0660fdd342fa870de" 
    public_subnet_ids: ["subnet-04c7e26d9dbcfeb52", "subnet-0a87b5f3f34b3cfd1"] 
    private_subnet_ids: ["subnet-0eddb73a07d97574c", "subnet-018751fdd0049d93e", "subnet-04016aa2951215e5d"] 
  eks:
    cluster_name: "shared-eks-cluster-name" 

kms:
  key_prefix: app1-data-encryption
  deletion_window_in_days: 10

database:
  db_allocated_storage: 20
  db_engine_version: "14.7"
  db_instance_class: db.t3.micro
  db_name: app1db
  db_multi_az: false
  db_availability_zone: null

cache:
  cache_cluster_id: app1-redis-cluster
  cache_node_type: cache.t2.micro
  cache_num_nodes: 1
  cache_engine_version: "7.0"

messaging:
  kafka_cluster_name: app1-kafka-cluster
  kafka_version: "3.4.0"
  kafka_broker_nodes: 3
  kafka_instance_type: kafka.t3.small

compute:
  modules_to_deploy: ["eks"] # while reusing EKS cluster module compute will still deploy the node group
  eks_cluster_name: "shared-eks-cluster-name" 